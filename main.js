!function(){"use strict";var e={formSelector:".form",inputSelector:".popup__input",inputClassError:"popup__input_error",submitButton:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputTextError:".form__error"},t=document.querySelector(".profile__add-button"),n=document.querySelector('[name="form-place"]'),r=document.querySelector(".elements"),o=(document.querySelector(".popup_type_photo"),document.querySelector(".profile__edit")),i=document.querySelector('[name="form-edit"]'),u=i.querySelector('[name="name"]'),c=i.querySelector('[name="about"]'),a=document.querySelector('[name="form-avatar"]'),s=document.querySelector(".profile__icon");function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n,r,o,i,u){var c=this,a=t.item;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=a.name,this._link=a.link,this._userId=u,this._cardTemplate=n,this._handleCardClick=r,this._handleDeleteClick=o.bind(this),this._handleLikeClick=i.bind(this),this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".element__image"),this._likeCount=this._cardElement.querySelector(".element__like-count"),this._likes=a.likes,this._isDelete=a.owner._id===this._userId,this.islikes=a.likes.some((function(e){return e._id===c._userId})),this.cardID=a._id,this._deleteButton=this._cardElement.querySelector(".element__delete")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplate).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){return this._isDelete||this._cardElement.removeChild(this._deleteButton),this._cardElement.querySelector(".element__name").textContent=this._text,this._cardImage.alt=this._text,this._cardImage.src=this._link,this.likeInfo(this._likes),this._setEventListeners(),this._cardElement}},{key:"removeCard",value:function(){this.createCard().remove()}},{key:"likeInfo",value:function(e){this.islikes?(this._likeCount.textContent=e.length,this._cardElement.querySelector(".element__like").classList.add("element__like_active"),this.islikes=!this.islikes):(this._likeCount.textContent=e.length,this._cardElement.querySelector(".element__like").classList.remove("element__like_active"),this.islikes=!this.islikes)}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardClick()})),this._cardElement.querySelector(".element__like").addEventListener("click",(function(){e._handleLikeClick()})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteClick()}))}}])&&l(t.prototype,n),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inputSelector=t.inputSelector,this._inputClassError=t.inputClassError,this._inactiveButtonClass=t.inactiveButtonClass,this._inputTextError=t.inputTextError,this._submitButton=this._formElement.querySelector(t.submitButton)}var t,n;return t=e,(n=[{key:"enableValidition",value:function(){var e=this;this._formElement.addEventListener("input",(function(t){return e._handelFormInput(t)}))}},{key:"_handelFormInput",value:function(e){var t=e.target,n=e.currentTarget;this._setFieldError(t),this._toggleButtonSubmit(n)}},{key:"_setFieldError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.validity.valid?(e.classList.remove(this._inputClassError),t.textContent=""):(e.classList.add(this._inputClassError),t.textContent=e.validationMessage)}},{key:"_inactiveButtonSubmit",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled")}},{key:"_toggleButtonSubmit",value:function(e){e.checkValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled")):this._inactiveButtonSubmit()}},{key:"resetValidation",value:function(){var e=this,t=this._formElement.querySelectorAll(this._inputTextError),n=this._formElement.querySelectorAll(this._inputSelector);t.forEach((function(e){e.textContent=""})),n.forEach((function(t){t.classList.remove(e._inputClassError)})),this._inactiveButtonSubmit()}}])&&p(t.prototype,n),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"prependItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;this._renderedItems=e,this._renderedItems.forEach((function(e){t._renderer(e)}))}}])&&d(t.prototype,n),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._popupCloseButton=this._popup.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&y(t.prototype,n),e}();function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return(k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(e){var t,n=e.popupSelector,r=e.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._submitForm=r,t._popupForm=t._popup.querySelector(".form"),t._inputList=t._popupForm.querySelectorAll(".popup__input"),t._submitFormButton=t._popupForm.querySelector(".popup__submit"),t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())})),k(E(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),k(E(u.prototype),"close",this).call(this)}},{key:"renderLoading",value:function(e){this._submitFormButton.textContent=e?"Сохранение...":"Сохранить"}}])&&b(t.prototype,n),u}(m);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.userNameSelector,r=t.userSublineSelector,o=t.UserAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(".".concat(n)),this._userSubline=document.querySelector(".".concat(r)),this._userAvatar=document.querySelector(".".concat(o))}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this.userInfo={},this.userInfo.name=this._userName.textContent,this.userInfo.about=this._userSubline.textContent,this.userInfo}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userSubline.textContent=e.about}},{key:"setUserAvatar",value:function(e){this._userAvatar.src=e.avatar}}])&&C(t.prototype,n),e}();function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e,t,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function R(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupPhotoName=t._popup.querySelector(".popup__photoName"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._popupImage.src=n,this._popupImage.alt=t,this._popupPhotoName.textContent=t,j(q(u.prototype),"open",this).call(this)}}])&&I(t.prototype,n),u}(m);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"likeAdd",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"likeDelete",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"avatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._checkResponse)}}])&&B(t.prototype,n),e}();function A(e){return(A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(e,t,n){return(D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function U(e,t){return(U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function V(e,t){return!t||"object"!==A(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupForm=t._popup.querySelector(".form"),t}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._action(),e.close()})),D(N(u.prototype),"setEventListeners",this).call(this)}},{key:"setSubmitAction",value:function(e){this._action=e}}])&&F(t.prototype,n),u}(m);function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=null,M=new x({url:"https://nomoreparties.co/v1/cohort-26",headers:{authorization:"aaca6239-cac0-4a87-8d95-e01e56ac6f60","Content-Type":"application/json"}}),z=new O({userNameSelector:"profile__name",userSublineSelector:"profile__subline",UserAvatarSelector:"profile__image"}),$=new h(e,i),K=new h(e,n),Q=new h(e,a),W=new _({renderer:function(e){W.addItem(ne(e))}},r),X=new w({popupSelector:".popup_type_place",submitForm:function(e){X.renderLoading(!0),M.addCard(e).then((function(e){W.prependItem(ne(e))})).catch((function(e){console.log(e)})).finally((function(){X.renderLoading(!1),X.close()}))}}),Y=new w({popupSelector:".popup_type_edit",submitForm:function(e){Y.renderLoading(!0),M.setUserInfo(e).then((function(e){z.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){Y.renderLoading(!1),Y.close()}))}}),Z=new w({popupSelector:".popup_type_avatar",submitForm:function(e){Z.renderLoading(!0),M.avatar(e).then((function(e){z.setUserAvatar(e)})).catch((function(e){console.log(e)})).finally((function(){Z.renderLoading(!1),Z.close()}))}}),ee=new T(".popup_type_photo"),te=new J(".popup_type_delete");function ne(e){var t=new f({item:e},"#template",(function(){ee.open(e)}),(function(){te.setSubmitAction((function(){M.deleteCard(e._id).catch((function(e){console.log(e)})),t.removeCard()})),te.open()}),(function(){!function(e){e.islikes?M.likeAdd(e.cardID).then((function(t){e.likeInfo(t.likes)})).catch((function(e){console.log(e)})):M.likeDelete(e.cardID).then((function(t){e.likeInfo(t.likes)})).catch((function(e){console.log(e)}))}(t)}),H);return t.createCard()}Promise.all([M.getUserInfo(),M.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,c=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];z.setUserInfo(o),z.setUserAvatar(o),H=o._id,W.renderItems(i)})).catch((function(e){console.log(e)})),t.addEventListener("click",(function(){K.resetValidation(),X.open()})),o.addEventListener("click",(function(){Y.open(),$.resetValidation();var e=z.getUserInfo(),t=e.name,n=e.about;u.value=t,c.value=n})),s.addEventListener("click",(function(){Z.open(),Q.resetValidation()})),ee.setEventListeners(),Z.setEventListeners(),Y.setEventListeners(),X.setEventListeners(),te.setEventListeners(),$.enableValidition(),K.enableValidition(),Q.enableValidition()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,